<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="unlp.info.bd2.ToursQuerysTests" time="3.286" tests="14" errors="7" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\ide08\Desktop\tpbd2025_tours-main\target\test-classes;C:\Users\ide08\Desktop\tpbd2025_tours-main\target\classes;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.3\spring-boot-starter-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot\3.2.3\spring-boot-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-context\6.1.4\spring-context-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-aop\6.1.4\spring-aop-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-expression\6.1.4\spring-expression-6.1.4.jar;C:\Users\ide08\.m2\repository\io\micrometer\micrometer-observation\1.12.3\micrometer-observation-1.12.3.jar;C:\Users\ide08\.m2\repository\io\micrometer\micrometer-commons\1.12.3\micrometer-commons-1.12.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.3\spring-boot-autoconfigure-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.3\spring-boot-starter-logging-3.2.3.jar;C:\Users\ide08\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\ide08\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\ide08\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\ide08\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\ide08\.m2\repository\org\slf4j\jul-to-slf4j\2.0.12\jul-to-slf4j-2.0.12.jar;C:\Users\ide08\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-core\6.1.4\spring-core-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-jcl\6.1.4\spring-jcl-6.1.4.jar;C:\Users\ide08\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-tx\6.0.12\spring-tx-6.0.12.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-beans\6.1.4\spring-beans-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-orm\6.0.12\spring-orm-6.0.12.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-jdbc\6.1.4\spring-jdbc-6.1.4.jar;C:\Users\ide08\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\ide08\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ide08\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ide08\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ide08\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ide08\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ide08\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\ide08\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\ide08\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\ide08\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\ide08\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\ide08\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\ide08\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\ide08\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\ide08\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ide08\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ide08\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ide08\.m2\repository\com\mysql\mysql-connector-j\9.2.0\mysql-connector-j-9.2.0.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.3\spring-boot-starter-jdbc-3.2.3.jar;C:\Users\ide08\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\ide08\.m2\repository\org\slf4j\slf4j-api\2.0.12\slf4j-api-2.0.12.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.3\spring-boot-starter-test-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-test\3.2.3\spring-boot-test-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.3\spring-boot-test-autoconfigure-3.2.3.jar;C:\Users\ide08\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\ide08\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\ide08\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\ide08\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\ide08\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\ide08\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\ide08\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\ide08\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\ide08\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\ide08\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\ide08\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\ide08\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\ide08\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\ide08\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\ide08\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\ide08\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\ide08\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-test\6.1.4\spring-test-6.1.4.jar;C:\Users\ide08\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\ide08\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\ide08\.m2\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;C:\Users\ide08\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\ide08\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\ide08\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.3\spring-boot-starter-validation-3.2.3.jar;C:\Users\ide08\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.19\tomcat-embed-el-10.1.19.jar;C:\Users\ide08\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\ide08\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Buenos_Aires"/>
    <property name="user.country.format" value="AR"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
    <property name="sun.java.command" value="C:\Users\ide08\AppData\Local\Temp\surefire14899705632895173949\surefirebooter-20250408170122555_3.jar C:\Users\ide08\AppData\Local\Temp\surefire14899705632895173949 2025-04-08T17-01-21_976-jvmRun1 surefire-20250408170122555_1tmp surefire_0-20250408170122555_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\ide08\Desktop\tpbd2025_tours-main\target\test-classes;C:\Users\ide08\Desktop\tpbd2025_tours-main\target\classes;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.3\spring-boot-starter-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot\3.2.3\spring-boot-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-context\6.1.4\spring-context-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-aop\6.1.4\spring-aop-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-expression\6.1.4\spring-expression-6.1.4.jar;C:\Users\ide08\.m2\repository\io\micrometer\micrometer-observation\1.12.3\micrometer-observation-1.12.3.jar;C:\Users\ide08\.m2\repository\io\micrometer\micrometer-commons\1.12.3\micrometer-commons-1.12.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.3\spring-boot-autoconfigure-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.3\spring-boot-starter-logging-3.2.3.jar;C:\Users\ide08\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\ide08\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\ide08\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\ide08\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\ide08\.m2\repository\org\slf4j\jul-to-slf4j\2.0.12\jul-to-slf4j-2.0.12.jar;C:\Users\ide08\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-core\6.1.4\spring-core-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-jcl\6.1.4\spring-jcl-6.1.4.jar;C:\Users\ide08\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-tx\6.0.12\spring-tx-6.0.12.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-beans\6.1.4\spring-beans-6.1.4.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-orm\6.0.12\spring-orm-6.0.12.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-jdbc\6.1.4\spring-jdbc-6.1.4.jar;C:\Users\ide08\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\ide08\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ide08\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ide08\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ide08\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ide08\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ide08\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\ide08\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\ide08\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\ide08\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\ide08\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\ide08\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\ide08\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\ide08\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\ide08\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ide08\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ide08\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ide08\.m2\repository\com\mysql\mysql-connector-j\9.2.0\mysql-connector-j-9.2.0.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.3\spring-boot-starter-jdbc-3.2.3.jar;C:\Users\ide08\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\ide08\.m2\repository\org\slf4j\slf4j-api\2.0.12\slf4j-api-2.0.12.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.3\spring-boot-starter-test-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-test\3.2.3\spring-boot-test-3.2.3.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.3\spring-boot-test-autoconfigure-3.2.3.jar;C:\Users\ide08\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\ide08\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\ide08\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\ide08\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\ide08\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\ide08\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\ide08\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\ide08\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\ide08\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\ide08\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\ide08\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\ide08\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\ide08\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\ide08\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.12\byte-buddy-agent-1.14.12.jar;C:\Users\ide08\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\ide08\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\ide08\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\ide08\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\ide08\.m2\repository\org\springframework\spring-test\6.1.4\spring-test-6.1.4.jar;C:\Users\ide08\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\ide08\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\ide08\.m2\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;C:\Users\ide08\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\ide08\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\ide08\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\ide08\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.3\spring-boot-starter-validation-3.2.3.jar;C:\Users\ide08\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.19\tomcat-embed-el-10.1.19.jar;C:\Users\ide08\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\ide08\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\ide08"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-01-16"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\ide08\Desktop\tpbd2025_tours-main"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\ide08\AppData\Local\Temp\surefire14899705632895173949\surefirebooter-20250408170122555_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.2+13-LTS-58"/>
    <property name="user.name" value="ide08"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\ide08\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\ide08\AppData\Local\Temp\"/>
    <property name="java.version" value="21.0.2"/>
    <property name="user.dir" value="C:\Users\ide08\Desktop\tpbd2025_tours-main"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.language.format" value="es"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Eclipse Adoptium\jdk-17.0.7.7-hotspot\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\FPC\3.2.2\bin\i386-Win32;C:\Program Files\dotnet\;C:\Users\ide08\AppData\Local\Programs\Python\Python312;C:\Users\ide08\AppData\Local\Programs\Python\Python312\Scripts;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\My Stuff\Files\apache-maven-3.8.8\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\ide08\AppData\Local\Programs\Python\Python312\Scripts;C:\Users\ide08\AppData\Local\Programs\Python\Python312;C:\Users\ide08\AppData\Local\Programs\Python\Launcher\;C:\Users\ide08\AppData\Local\Microsoft\WindowsApps;&quot;C:\Users\ide08\AppData\Local\Programs\Microsoft VS Code\bin;C:\FPC\2.6.0\bin\i386-win32\&quot;;C:\Users\ide08\.dotnet\tools;C:\Users\ide08\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\ide08\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.3.1.1\bin;;C:\My Stuff\Files\apache-maven-3.8.8\bin;C:\mingw64\bin;C:\My Stuff\Files\upx-4.2.4-win64;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.2+13-LTS-58"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="getRoutsNotSellTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.114">
    <system-out><![CDATA[17:01:35.251 [main] INFO org.hibernate.cache.internal.RegionFactoryInitiator -- HHH000026: Second-level cache disabled
17:01:35.288 [main] WARN org.hibernate.orm.deprecation -- HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:01:35.477 [main] INFO org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard -- HHH000182: No default (no-argument) constructor for class: unlp.info.bd2.model.ItemService (class must be instantiated by Interceptor)
17:01:35.491 [main] INFO org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard -- HHH000182: No default (no-argument) constructor for class: unlp.info.bd2.model.Review (class must be instantiated by Interceptor)
17:01:35.541 [main] INFO org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard -- HHH000182: No default (no-argument) constructor for class: unlp.info.bd2.model.Purchase (class must be instantiated by Interceptor)
17:01:35.672 [main] INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator -- HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table ItemService 
       drop 
       foreign key FK3irqogllelbjchciuu8lkqhsa
Hibernate: 
    alter table ItemService 
       drop 
       foreign key FK9qy0l54bu71fed4qcr5w2a6jj
Hibernate: 
    alter table Purchase 
       drop 
       foreign key FKmegulceyii61cx6yvqjk2arme
Hibernate: 
    alter table Purchase 
       drop 
       foreign key FKe38mi6hefejgcq3hhswf0vg2w
Hibernate: 
    alter table Review 
       drop 
       foreign key FKllu3c5acfdsewb2fg2s1e0dfd
Hibernate: 
    alter table route_driver 
       drop 
       foreign key FKfvldnxa4mb820mysg7daircty
Hibernate: 
    alter table route_driver 
       drop 
       foreign key FKf5b89brixnxjua499h8akt4dt
Hibernate: 
    alter table route_guide 
       drop 
       foreign key FKgkaxppoj3mr1gfohcx30ssoo4
Hibernate: 
    alter table route_guide 
       drop 
       foreign key FKodyvxgyq0bljjwi9kf4wl1bkx
Hibernate: 
    alter table route_stop 
       drop 
       foreign key FKdhlwk9t89bsdrleqsk6a1edns
Hibernate: 
    alter table route_stop 
       drop 
       foreign key FKsdni7jndcjyk8dd3sscmipo4y
Hibernate: 
    alter table Service 
       drop 
       foreign key FK7r8rfu8lnotaryukymhmmt4x2
Hibernate: 
    drop table if exists AppUser
Hibernate: 
    drop table if exists ItemService
Hibernate: 
    drop table if exists Purchase
Hibernate: 
    drop table if exists Review
Hibernate: 
    drop table if exists Route
Hibernate: 
    drop table if exists route_driver
Hibernate: 
    drop table if exists route_guide
Hibernate: 
    drop table if exists route_stop
Hibernate: 
    drop table if exists Service
Hibernate: 
    drop table if exists Stop
Hibernate: 
    drop table if exists Supplier
Hibernate: 
    create table AppUser (
        active bit not null,
        date datetime(6) not null,
        id bigint not null auto_increment,
        phoneNumber varchar(15) not null,
        type varchar(31) not null,
        password varchar(511) not null,
        education varchar(255),
        email varchar(255) not null,
        expedient varchar(255),
        name varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table ItemService (
        quantity integer not null,
        id bigint not null auto_increment,
        purchase_id bigint not null,
        service_id bigint not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table Purchase (
        totalPrice float(23) not null,
        date datetime(6) not null,
        id bigint not null auto_increment,
        route_id bigint not null,
        user_id bigint not null,
        code varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table Review (
        rating integer not null,
        id bigint not null auto_increment,
        purchase_id bigint not null,
        comment varchar(1023),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table Route (
        maxNumberUsers integer not null,
        price float(23) not null,
        totalKm float(23) not null,
        id bigint not null auto_increment,
        name varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table route_driver (
        driverUser_id bigint not null,
        route_id bigint not null
    ) engine=InnoDB
Hibernate: 
    create table route_guide (
        route_id bigint not null,
        tourGuideUser_id bigint not null
    ) engine=InnoDB
Hibernate: 
    create table route_stop (
        route_id bigint not null,
        stop_id bigint not null
    ) engine=InnoDB
Hibernate: 
    create table Service (
        price float(23) not null,
        id bigint not null auto_increment,
        supplier_id bigint not null,
        description varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table Stop (
        id bigint not null auto_increment,
        description varchar(1023) not null,
        name varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table Supplier (
        id bigint not null auto_increment,
        authorizationNumber varchar(255) not null,
        businessName varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    alter table AppUser 
       add constraint UK_atqgqm46rh7b0lrgl80ryd5tp unique (username)
Hibernate: 
    alter table Review 
       add constraint UK_k1hayctsk7sh28pkewme2cpwh unique (purchase_id)
Hibernate: 
    alter table Supplier 
       add constraint UK_42cyx8mhhvhl87fyh80w0q6i2 unique (authorizationNumber)
Hibernate: 
    alter table ItemService 
       add constraint FK3irqogllelbjchciuu8lkqhsa 
       foreign key (purchase_id) 
       references Purchase (id)
Hibernate: 
    alter table ItemService 
       add constraint FK9qy0l54bu71fed4qcr5w2a6jj 
       foreign key (service_id) 
       references Service (id)
Hibernate: 
    alter table Purchase 
       add constraint FKmegulceyii61cx6yvqjk2arme 
       foreign key (route_id) 
       references Route (id)
Hibernate: 
    alter table Purchase 
       add constraint FKe38mi6hefejgcq3hhswf0vg2w 
       foreign key (user_id) 
       references AppUser (id)
Hibernate: 
    alter table Review 
       add constraint FKllu3c5acfdsewb2fg2s1e0dfd 
       foreign key (purchase_id) 
       references Purchase (id)
Hibernate: 
    alter table route_driver 
       add constraint FKfvldnxa4mb820mysg7daircty 
       foreign key (driverUser_id) 
       references AppUser (id)
Hibernate: 
    alter table route_driver 
       add constraint FKf5b89brixnxjua499h8akt4dt 
       foreign key (route_id) 
       references Route (id)
Hibernate: 
    alter table route_guide 
       add constraint FKgkaxppoj3mr1gfohcx30ssoo4 
       foreign key (tourGuideUser_id) 
       references AppUser (id)
Hibernate: 
    alter table route_guide 
       add constraint FKodyvxgyq0bljjwi9kf4wl1bkx 
       foreign key (route_id) 
       references Route (id)
Hibernate: 
    alter table route_stop 
       add constraint FKdhlwk9t89bsdrleqsk6a1edns 
       foreign key (stop_id) 
       references Stop (id)
Hibernate: 
    alter table route_stop 
       add constraint FKsdni7jndcjyk8dd3sscmipo4y 
       foreign key (route_id) 
       references Route (id)
Hibernate: 
    alter table Service 
       add constraint FK7r8rfu8lnotaryukymhmmt4x2 
       foreign key (supplier_id) 
       references Supplier (id)
Hibernate: 
    insert 
    into
        Supplier
        (authorizationNumber, businessName) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Supplier
        (authorizationNumber, businessName) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Supplier
        (authorizationNumber, businessName) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Supplier
        (authorizationNumber, businessName) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Supplier
        (authorizationNumber, businessName) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Service
        (description, name, price, supplier_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Stop
        (description, name) 
    values
        (?, ?)
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, 'User')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, expedient, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'Driver')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, expedient, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'Driver')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, expedient, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'Driver')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, expedient, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'Driver')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, education, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'TourGuide')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, education, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'TourGuide')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, education, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'TourGuide')
Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        AppUser u1_0 
    where
        u1_0.username=?
Hibernate: 
    insert 
    into
        AppUser
        (active, date, email, name, password, phoneNumber, username, education, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, 'TourGuide')
Hibernate: 
    insert 
    into
        Route
        (maxNumberUsers, name, price, totalKm) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Route
        (maxNumberUsers, name, price, totalKm) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Route
        (maxNumberUsers, name, price, totalKm) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Route
        (maxNumberUsers, name, price, totalKm) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Route
        (maxNumberUsers, name, price, totalKm) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Purchase
        (code, date, route_id, totalPrice, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        ItemService
        (purchase_id, quantity, service_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        Review
        (comment, purchase_id, rating) 
    values
        (?, ?, ?)
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    update
        Purchase 
    set
        code=?,
        date=?,
        route_id=?,
        totalPrice=?,
        user_id=? 
    where
        id=?
Hibernate: 
    insert 
    into
        route_driver
        (route_id, driverUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_driver
        (route_id, driverUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_guide
        (route_id, tourGuideUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_driver
        (route_id, driverUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_driver
        (route_id, driverUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_guide
        (route_id, tourGuideUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_guide
        (route_id, tourGuideUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_driver
        (route_id, driverUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_guide
        (route_id, tourGuideUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_driver
        (route_id, driverUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_guide
        (route_id, tourGuideUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_guide
        (route_id, tourGuideUser_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        route_stop
        (route_id, stop_id) 
    values
        (?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.maxNumberUsers,
        r1_0.name,
        r1_0.price,
        r1_0.totalKm 
    from
        Route r1_0 
    where
        r1_0.id not in (select
            p1_0.route_id 
        from
            Purchase p1_0)
Hibernate: 
    select
        tgl1_0.route_id,
        tgl1_1.id,
        tgl1_1.active,
        tgl1_1.date,
        tgl1_1.email,
        tgl1_1.name,
        tgl1_1.password,
        tgl1_1.phoneNumber,
        tgl1_1.username,
        tgl1_1.education 
    from
        route_guide tgl1_0 
    join
        AppUser tgl1_1 
            on tgl1_1.id=tgl1_0.tourGuideUser_id 
    where
        tgl1_0.route_id=?
Hibernate: 
    select
        s1_0.route_id,
        s1_1.id,
        s1_1.description,
        s1_1.name 
    from
        route_stop s1_0 
    join
        Stop s1_1 
            on s1_1.id=s1_0.stop_id 
    where
        s1_0.route_id=?
Hibernate: 
    select
        p1_0.route_id,
        p1_0.id,
        p1_0.code,
        p1_0.date,
        r1_0.id,
        r1_0.comment,
        r1_0.purchase_id,
        r1_0.rating,
        p1_0.totalPrice,
        p1_0.user_id,
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        Purchase p1_0 
    left join
        Review r1_0 
            on p1_0.id=r1_0.purchase_id 
    left join
        AppUser u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.route_id=?
Hibernate: 
    select
        dl1_0.route_id,
        dl1_1.id,
        dl1_1.active,
        dl1_1.date,
        dl1_1.email,
        dl1_1.name,
        dl1_1.password,
        dl1_1.phoneNumber,
        dl1_1.username,
        dl1_1.expedient 
    from
        route_driver dl1_0 
    join
        AppUser dl1_1 
            on dl1_1.id=dl1_0.driverUser_id 
    where
        dl1_0.route_id=?
]]></system-out>
  </testcase>
  <testcase name="getAllPurchasesOfUsernameTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.037">
    <error message="No default constructor for entity &apos;unlp.info.bd2.model.Purchase&apos;" type="org.hibernate.InstantiationException"><![CDATA[org.hibernate.InstantiationException: No default constructor for entity 'unlp.info.bd2.model.Purchase'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4586)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1463)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.instantiateEntity(AbstractEntityInitializer.java:691)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:684)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:650)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:568)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:403)
	at org.hibernate.sql.results.internal.InitializersList.resolveInstances(InitializersList.java:88)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:108)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getAllPurchasesOfUsername(ToursRepositoryImpl.java:365)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getAllPurchasesOfUsername(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getAllPurchasesOfUsername(ToursServiceImpl.java:160)
	at unlp.info.bd2.ToursQuerysTests.getAllPurchasesOfUsernameTest(ToursQuerysTests.java:56)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        p1_0.id,
        p1_0.code,
        p1_0.date,
        p1_0.route_id,
        p1_0.totalPrice,
        p1_0.user_id 
    from
        Purchase p1_0 
    join
        AppUser u1_0 
            on u1_0.id=p1_0.user_id 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="getRoutesWithStopTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.054">
    <error message="No default constructor for entity &apos;unlp.info.bd2.model.Review&apos;" type="org.hibernate.InstantiationException"><![CDATA[org.hibernate.InstantiationException: No default constructor for entity 'unlp.info.bd2.model.Review'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4586)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1463)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.instantiateEntity(AbstractEntityInitializer.java:691)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:684)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:650)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:568)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:403)
	at org.hibernate.sql.results.internal.InitializersList.resolveInstances(InitializersList.java:88)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:108)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:181)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.load(CollectionLoaderSingleKey.java:120)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:680)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:1692)
	at org.hibernate.collection.spi.AbstractPersistentCollection.lambda$initialize$3(AbstractPersistentCollection.java:615)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:816)
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1143)
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1129)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:229)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getRoutesWithStop(ToursRepositoryImpl.java:466)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getRoutesWithStop(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getRoutesWithStop(ToursServiceImpl.java:183)
	at unlp.info.bd2.ToursQuerysTests.getRoutesWithStopTest(ToursQuerysTests.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name 
    from
        Stop s1_0 
    where
        s1_0.name like ? escape ''
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name 
    from
        Stop s1_0 
    where
        s1_0.name like ? escape ''
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name 
    from
        Stop s1_0 
    where
        s1_0.name like ? escape ''
Hibernate: 
    select
        r1_0.id,
        r1_0.maxNumberUsers,
        r1_0.name,
        r1_0.price,
        r1_0.totalKm 
    from
        Route r1_0 
    join
        route_stop s1_0 
            on r1_0.id=s1_0.route_id 
    join
        Stop s1_1 
            on s1_1.id=s1_0.stop_id 
    where
        s1_1.id=?
Hibernate: 
    select
        tgl1_0.route_id,
        tgl1_1.id,
        tgl1_1.active,
        tgl1_1.date,
        tgl1_1.email,
        tgl1_1.name,
        tgl1_1.password,
        tgl1_1.phoneNumber,
        tgl1_1.username,
        tgl1_1.education 
    from
        route_guide tgl1_0 
    join
        AppUser tgl1_1 
            on tgl1_1.id=tgl1_0.tourGuideUser_id 
    where
        tgl1_0.route_id=?
Hibernate: 
    select
        s1_0.route_id,
        s1_1.id,
        s1_1.description,
        s1_1.name 
    from
        route_stop s1_0 
    join
        Stop s1_1 
            on s1_1.id=s1_0.stop_id 
    where
        s1_0.route_id=?
Hibernate: 
    select
        p1_0.route_id,
        p1_0.id,
        p1_0.code,
        p1_0.date,
        r1_0.id,
        r1_0.comment,
        r1_0.purchase_id,
        r1_0.rating,
        p1_0.totalPrice,
        p1_0.user_id,
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        Purchase p1_0 
    left join
        Review r1_0 
            on p1_0.id=r1_0.purchase_id 
    left join
        AppUser u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.route_id=?
Hibernate: 
    select
        dl1_0.route_id,
        dl1_1.id,
        dl1_1.active,
        dl1_1.date,
        dl1_1.email,
        dl1_1.name,
        dl1_1.password,
        dl1_1.phoneNumber,
        dl1_1.username,
        dl1_1.expedient 
    from
        route_driver dl1_0 
    join
        AppUser dl1_1 
            on dl1_1.id=dl1_0.driverUser_id 
    where
        dl1_0.route_id=?
Hibernate: 
    select
        tgl1_0.route_id,
        tgl1_1.id,
        tgl1_1.active,
        tgl1_1.date,
        tgl1_1.email,
        tgl1_1.name,
        tgl1_1.password,
        tgl1_1.phoneNumber,
        tgl1_1.username,
        tgl1_1.education 
    from
        route_guide tgl1_0 
    join
        AppUser tgl1_1 
            on tgl1_1.id=tgl1_0.tourGuideUser_id 
    where
        tgl1_0.route_id=?
Hibernate: 
    select
        pl1_0.user_id,
        pl1_0.id,
        pl1_0.code,
        pl1_0.date,
        r1_0.id,
        r1_0.comment,
        r1_0.purchase_id,
        r1_0.rating,
        pl1_0.route_id,
        r2_0.id,
        r2_0.maxNumberUsers,
        r2_0.name,
        r2_0.price,
        r2_0.totalKm,
        pl1_0.totalPrice 
    from
        Purchase pl1_0 
    left join
        Review r1_0 
            on pl1_0.id=r1_0.purchase_id 
    left join
        Route r2_0 
            on r2_0.id=pl1_0.route_id 
    where
        pl1_0.user_id=?
Hibernate: 
    select
        s1_0.route_id,
        s1_1.id,
        s1_1.description,
        s1_1.name 
    from
        route_stop s1_0 
    join
        Stop s1_1 
            on s1_1.id=s1_0.stop_id 
    where
        s1_0.route_id=?
Hibernate: 
    select
        p1_0.route_id,
        p1_0.id,
        p1_0.code,
        p1_0.date,
        r1_0.id,
        r1_0.comment,
        r1_0.purchase_id,
        r1_0.rating,
        p1_0.totalPrice,
        p1_0.user_id,
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        Purchase p1_0 
    left join
        Review r1_0 
            on p1_0.id=r1_0.purchase_id 
    left join
        AppUser u1_0 
            on u1_0.id=p1_0.user_id 
    where
        p1_0.route_id=?
]]></system-out>
  </testcase>
  <testcase name="getServiceNoAddedToPurchasesTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.072">
    <system-out><![CDATA[Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.price,
        s1_0.supplier_id 
    from
        Service s1_0 
    where
        not exists(select
            1 
        from
            ItemService is1_0 
        where
            is1_0.service_id=s1_0.id)
Hibernate: 
    select
        s1_0.id,
        s1_0.authorizationNumber,
        s1_0.businessName 
    from
        Supplier s1_0 
    where
        s1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.authorizationNumber,
        s1_0.businessName 
    from
        Supplier s1_0 
    where
        s1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="getMaxStopOfRoutesTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.081">
    <system-out><![CDATA[Hibernate: 
    select
        max(derived1_0.stopsCount) 
    from
        (select
            r1_0.id,
            count(s1_0.stop_id) 
        from
            Route r1_0 
        left join
            route_stop s1_0 
                on r1_0.id=s1_0.route_id 
        group by
            r1_0.id) derived1_0(routeId, stopsCount)
]]></system-out>
  </testcase>
  <testcase name="getTop10MoreExpensivePurchasesInServicesTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.021">
    <error message="No default constructor for entity &apos;unlp.info.bd2.model.Purchase&apos;" type="org.hibernate.InstantiationException"><![CDATA[org.hibernate.InstantiationException: No default constructor for entity 'unlp.info.bd2.model.Purchase'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4586)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1463)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.instantiateEntity(AbstractEntityInitializer.java:691)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:684)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:650)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:568)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:403)
	at org.hibernate.sql.results.internal.InitializersList.resolveInstances(InitializersList.java:88)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:108)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:203)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getTop10MoreExpensivePurchasesInServices(ToursRepositoryImpl.java:393)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getTop10MoreExpensivePurchasesInServices(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getTop10MoreExpensivePurchasesInServices(ToursServiceImpl.java:172)
	at unlp.info.bd2.ToursQuerysTests.getTop10MoreExpensivePurchasesInServicesTest(ToursQuerysTests.java:90)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        p1_0.id,
        p1_0.code,
        p1_0.date,
        p1_0.route_id,
        p1_0.totalPrice,
        p1_0.user_id 
    from
        Purchase p1_0 
    order by
        p1_0.totalPrice desc 
    limit
        ?
]]></system-out>
  </testcase>
  <testcase name="getTopNSuppliersInPurchasesTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.022">
    <system-out><![CDATA[Hibernate: 
    select
        s2_0.id,
        s2_0.authorizationNumber,
        s2_0.businessName 
    from
        ItemService is1_0 
    join
        Service s1_0 
            on s1_0.id=is1_0.service_id 
    join
        Supplier s2_0 
            on s2_0.id=s1_0.supplier_id 
    group by
        s2_0.id 
    order by
        count(is1_0.id) desc 
    limit
        ?
Hibernate: 
    select
        s2_0.id,
        s2_0.authorizationNumber,
        s2_0.businessName 
    from
        ItemService is1_0 
    join
        Service s1_0 
            on s1_0.id=is1_0.service_id 
    join
        Supplier s2_0 
            on s2_0.id=s1_0.supplier_id 
    group by
        s2_0.id 
    order by
        count(is1_0.id) desc 
    limit
        ?
]]></system-out>
  </testcase>
  <testcase name="getTop5UsersMorePurchasesTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.017">
    <error message="No default constructor for entity &apos;unlp.info.bd2.model.Review&apos;" type="org.hibernate.InstantiationException"><![CDATA[org.hibernate.InstantiationException: No default constructor for entity 'unlp.info.bd2.model.Review'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4586)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1463)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.instantiateEntity(AbstractEntityInitializer.java:691)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:684)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:650)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:568)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:403)
	at org.hibernate.sql.results.internal.InitializersList.resolveInstances(InitializersList.java:88)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:108)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:181)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.load(CollectionLoaderSingleKey.java:120)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:680)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:1692)
	at org.hibernate.collection.spi.AbstractPersistentCollection.lambda$initialize$3(AbstractPersistentCollection.java:615)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:816)
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1143)
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1129)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:229)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getTop5UsersMorePurchases(ToursRepositoryImpl.java:404)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getTop5UsersMorePurchases(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getTop5UsersMorePurchases(ToursServiceImpl.java:177)
	at unlp.info.bd2.ToursQuerysTests.getTop5UsersMorePurchasesTest(ToursQuerysTests.java:97)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        Purchase p1_0 
    join
        AppUser u1_0 
            on u1_0.id=p1_0.user_id 
    group by
        u1_0.id 
    order by
        count(p1_0.id) desc 
    limit
        ?
Hibernate: 
    select
        pl1_0.user_id,
        pl1_0.id,
        pl1_0.code,
        pl1_0.date,
        r1_0.id,
        r1_0.comment,
        r1_0.purchase_id,
        r1_0.rating,
        pl1_0.route_id,
        r2_0.id,
        r2_0.maxNumberUsers,
        r2_0.name,
        r2_0.price,
        r2_0.totalKm,
        pl1_0.totalPrice 
    from
        Purchase pl1_0 
    left join
        Review r1_0 
            on pl1_0.id=r1_0.purchase_id 
    left join
        Route r2_0 
            on r2_0.id=pl1_0.route_id 
    where
        pl1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="init" classname="unlp.info.bd2.ToursQuerysTests" time="0.004"/>
  <testcase name="getUserSpendingMoreThanTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.048">
    <error message="No default constructor for entity &apos;unlp.info.bd2.model.Review&apos;" type="org.hibernate.InstantiationException"><![CDATA[org.hibernate.InstantiationException: No default constructor for entity 'unlp.info.bd2.model.Review'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4586)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1463)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.instantiateEntity(AbstractEntityInitializer.java:691)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:684)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:650)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:568)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:403)
	at org.hibernate.sql.results.internal.InitializersList.resolveInstances(InitializersList.java:88)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:108)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:181)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.load(CollectionLoaderSingleKey.java:120)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:680)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:67)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:1692)
	at org.hibernate.collection.spi.AbstractPersistentCollection.lambda$initialize$3(AbstractPersistentCollection.java:615)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:816)
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1143)
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1129)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:229)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getUserSpendingMoreThan(ToursRepositoryImpl.java:374)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getUserSpendingMoreThan(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getUserSpendingMoreThan(ToursServiceImpl.java:164)
	at unlp.info.bd2.ToursQuerysTests.getUserSpendingMoreThanTest(ToursQuerysTests.java:68)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.type,
        u1_0.active,
        u1_0.date,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phoneNumber,
        u1_0.username,
        u1_0.expedient,
        u1_0.education 
    from
        Purchase p1_0 
    join
        AppUser u1_0 
            on u1_0.id=p1_0.user_id 
    group by
        u1_0.id 
    having
        sum(p1_0.totalPrice)>?
Hibernate: 
    select
        pl1_0.user_id,
        pl1_0.id,
        pl1_0.code,
        pl1_0.date,
        r1_0.id,
        r1_0.comment,
        r1_0.purchase_id,
        r1_0.rating,
        pl1_0.route_id,
        r2_0.id,
        r2_0.maxNumberUsers,
        r2_0.name,
        r2_0.price,
        r2_0.totalKm,
        pl1_0.totalPrice 
    from
        Purchase pl1_0 
    left join
        Review r1_0 
            on pl1_0.id=r1_0.purchase_id 
    left join
        Route r2_0 
            on r2_0.id=pl1_0.route_id 
    where
        pl1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="getMostDemandedServiceTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.015">
    <system-out><![CDATA[Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.price,
        s1_0.supplier_id 
    from
        ItemService is1_0 
    join
        Service s1_0 
            on s1_0.id=is1_0.service_id 
    group by
        s1_0.id 
    order by
        sum(is1_0.quantity) desc 
    limit
        ?
Hibernate: 
    select
        s1_0.id,
        s1_0.authorizationNumber,
        s1_0.businessName 
    from
        Supplier s1_0 
    where
        s1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="getTourGuidesWithRating1Test" classname="unlp.info.bd2.ToursQuerysTests" time="0.026">
    <error message="org.hibernate.query.SemanticException: Entity join did not specify a join condition [SqmEntityJoin(unlp.info.bd2.model.Purchase(purchase))] (specify a join condition with &apos;on&apos; or use &apos;cross join&apos;)" type="java.lang.IllegalArgumentException"><![CDATA[java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: Entity join did not specify a join condition [SqmEntityJoin(unlp.info.bd2.model.Purchase(purchase))] (specify a join condition with 'on' or use 'cross join')
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:438)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getTourGuidesWithRating1(ToursRepositoryImpl.java:542)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getTourGuidesWithRating1(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getTourGuidesWithRating1(ToursServiceImpl.java:210)
	at unlp.info.bd2.ToursQuerysTests.getTourGuidesWithRating1Test(ToursQuerysTests.java:165)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
Caused by: org.hibernate.query.SemanticException: Entity join did not specify a join condition [SqmEntityJoin(unlp.info.bd2.model.Purchase(purchase))] (specify a join condition with 'on' or use 'cross join')
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.consumeEntityJoin(BaseSqmToSqlAstConverter.java:3490)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.consumeExplicitJoin(BaseSqmToSqlAstConverter.java:3240)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.consumeJoins(BaseSqmToSqlAstConverter.java:2888)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.consumeFromClauseRoot(BaseSqmToSqlAstConverter.java:2822)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.hibernate.query.sqm.tree.from.SqmFromClause.visitRoots(SqmFromClause.java:80)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitFromClause(BaseSqmToSqlAstConverter.java:2573)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitQuerySpec(BaseSqmToSqlAstConverter.java:2055)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitQuerySpec(BaseSqmToSqlAstConverter.java:440)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:127)
	at org.hibernate.query.sqm.spi.BaseSemanticQueryWalker.visitQueryPart(BaseSemanticQueryWalker.java:218)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitQueryPart(BaseSqmToSqlAstConverter.java:1915)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitSubQueryExpression(BaseSqmToSqlAstConverter.java:6872)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitSubQueryExpression(BaseSqmToSqlAstConverter.java:440)
	at org.hibernate.query.sqm.tree.select.SqmSubQuery.accept(SqmSubQuery.java:694)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitWithInferredType(BaseSqmToSqlAstConverter.java:6988)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitInSubQueryPredicate(BaseSqmToSqlAstConverter.java:7952)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitInSubQueryPredicate(BaseSqmToSqlAstConverter.java:440)
	at org.hibernate.query.sqm.tree.predicate.SqmInSubQueryPredicate.accept(SqmInSubQueryPredicate.java:91)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitWhereClause(BaseSqmToSqlAstConverter.java:2484)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitQuerySpec(BaseSqmToSqlAstConverter.java:2061)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitQuerySpec(BaseSqmToSqlAstConverter.java:440)
	at org.hibernate.query.sqm.tree.select.SqmQuerySpec.accept(SqmQuerySpec.java:127)
	at org.hibernate.query.sqm.spi.BaseSemanticQueryWalker.visitQueryPart(BaseSemanticQueryWalker.java:218)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitQueryPart(BaseSqmToSqlAstConverter.java:1915)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitSelectStatement(BaseSqmToSqlAstConverter.java:1600)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.visitSelectStatement(BaseSqmToSqlAstConverter.java:440)
	at org.hibernate.query.sqm.tree.select.SqmSelectStatement.accept(SqmSelectStatement.java:228)
	at org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.translate(BaseSqmToSqlAstConverter.java:776)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.buildCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:402)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:327)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	... 11 more
]]></error>
  </testcase>
  <testcase name="getTop3RoutesWithMaxRatingTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.011">
    <error message="org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute &apos;reviews&apos; of &apos;unlp.info.bd2.model.Route&apos; [SELECT r FROM Route r JOIN r.reviews rev GROUP BY r.id ORDER BY AVG(rev.rating) DESC]" type="java.lang.IllegalArgumentException"><![CDATA[java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'reviews' of 'unlp.info.bd2.model.Route' [SELECT r FROM Route r JOIN r.reviews rev GROUP BY r.id ORDER BY AVG(rev.rating) DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:848)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:136)
	at unlp.info.bd2.repositories.ToursRepositoryImpl.getTop3RoutesWithMaxAverageRating(ToursRepositoryImpl.java:455)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at jdk.proxy2/jdk.proxy2.$Proxy82.getTop3RoutesWithMaxAverageRating(Unknown Source)
	at unlp.info.bd2.services.ToursServiceImpl.getTop3RoutesWithMaxRating(ToursServiceImpl.java:194)
	at unlp.info.bd2.ToursQuerysTests.getTop3RoutesWithMaxRatingTest(ToursQuerysTests.java:144)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'reviews' of 'unlp.info.bd2.model.Route' [SELECT r FROM Route r JOIN r.reviews rev GROUP BY r.id ORDER BY AVG(rev.rating) DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:790)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:840)
	... 12 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'reviews' of 'unlp.info.bd2.model.Route'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:190)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:257)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:104)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5060)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5009)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4984)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:4975)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4246)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2163)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2107)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:1922)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:1901)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1148)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 16 more
]]></error>
  </testcase>
  <testcase name="getCountOfPurchasesBetweenDatesTest" classname="unlp.info.bd2.ToursQuerysTests" time="0.024">
    <system-out><![CDATA[Hibernate: 
    select
        count(p1_0.id) 
    from
        Purchase p1_0 
    where
        p1_0.date between ? and ?
Hibernate: 
    select
        count(p1_0.id) 
    from
        Purchase p1_0 
    where
        p1_0.date between ? and ?
Hibernate: 
    select
        count(p1_0.id) 
    from
        Purchase p1_0 
    where
        p1_0.date between ? and ?
]]></system-out>
  </testcase>
</testsuite>